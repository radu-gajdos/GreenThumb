services:
  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend
  #   ports:
  #     - '3333:3333'
  #   volumes:
  #     - ./frontend:/usr/src/app
  #     - /usr/src/app/node_modules
  #     - /proc/sys/fs/inotify:/proc/sys/fs/inotify
  #   command: npm start

  # backend nest app
  backend_radu:
    container_name: backend_radu
    build:
      context: ./backend
    ports:
      - '3005:3005'
    depends_on:
      - db_radu
      - redis_radu
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      REDIS_HOST: redis_radu
      REDIS_PORT: 6379
      
  # database
  db_radu:
    image: postgis/postgis:17-3.4
    container_name: db_radu
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: crm
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  # redis
  redis_radu:
    image: redis:latest
    container_name: redis_radu
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server
      
  # adminer
  adminer_radu:
    image: adminer
    container_name: adminer_radu
    ports:
      - '8085:8080'
    depends_on:
      - db_radu
    environment:
      ADMINER_DESIGN: dracula

  # redisinsight
  redisinsight_radu:
    container_name: redisinsight_radu
    image: redislabs/redisinsight:latest
    ports:
      - "8001:5540"
    volumes:
      - redisinsight:/db
    depends_on:
      - redis_radu

  ai_model:
    container_name: ai_model
    build:
      context: ./ai-model
    ports:
      - "8000:8000"
    volumes:
      - ./ai-model:/app
    # mem_limit: 1g


volumes:
  postgres-data:
  redisinsight:




# Backend: 3005
# DB: 5432
# Adminer: 8085
# Redis: 6379